{
	"name": "DF_Monthly_Extracts_for_ABI_Agency",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ABI_COMMISSION_ALL_SALES_SUMMARY_HISTORY_PRD",
						"type": "DatasetReference"
					},
					"name": "source1",
					"description": "Import data from ABI_COMMISSION_ALL_SALES_SUMMARY_HISTORY_PRD"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ABI_SALES_MONTHLY_SUMMARY_REPORT_UAT",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"description": "Export data to ABI_SALES_MONTHLY_SUMMARY_REPORT_PRD"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          E2eis_Seq_Number as long,",
				"          Payee_AOR as string,",
				"          WritingAgentName as string,",
				"          WritingAgentPayrollId as string,",
				"          FBPaymentAmount as string,",
				"          Agent_Commission as string,",
				"          Override_Commission as string,",
				"          Agency_ID as string,",
				"          Record_Load_Date as date,",
				"          Record_Loaded_By as string,",
				"          Record_Data_Source as string,",
				"          Record_Flag_Status as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT [Payee_AOR]\\n      ,[WritingAgentName]\\n      ,[Payee_Name]\\n      ,[WritingAgentPayrollId]\\n      ,[Agency_Payment]\\n      ,[Agent_Stmt_Commission]\\n      ,[FBPaymentAmount]\\n      ,[Agent_Commission]\\n      ,[Override_Commission]\\n      ,[Manual_Adjustments]\\n      ,[Payee_Count]\\n      ,[Primary_Indicator]\\n      ,[Category]\\n      ,[Payroll_Sequence]\\n      ,[Period_Name]\\n  FROM [dbo].[ABI_COMMISSION_ALL_SALES_SUMMARY]\\n  WHERE Period_Name=\\'July 2024\\'\\n\\n',",
				"     format: 'query') ~> source1",
				"source1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['ABI_ALL_SALES_SUMMARY_REPORT.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}