{
	"name": "AUTOMATED_PIPELINE_FOR_ALL_SIM_WEEKLY_DATA_FEEDS_DOTNET",
	"properties": {
		"activities": [
			{
				"name": "ForEachProcesses",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "DELETE_BY_FILERECORDBIRTHDATE",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.processControls",
						"type": "Expression"
					},
					"batchCount": 5,
					"activities": [
						{
							"name": "IfEnabled",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@item().Enabled",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Copy",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "DelimitedTextSource",
												"storeSettings": {
													"type": "SftpReadSettings",
													"recursive": true,
													"enablePartitionDiscovery": false,
													"disableChunking": false
												},
												"formatSettings": {
													"type": "DelimitedTextReadSettings"
												}
											},
											"sink": {
												"type": "AzureSqlSink",
												"writeBehavior": "insert",
												"sqlWriterUseTableLock": false
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "SftpDelimitedParam",
												"type": "DatasetReference",
												"parameters": {
													"p_folderPath": {
														"value": "@item().FolderPath",
														"type": "Expression"
													},
													"p_fileName": {
														"value": "@item().FileName",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "SqlTableParam",
												"type": "DatasetReference",
												"parameters": {
													"p_schema": {
														"value": "@item().TargetSchema",
														"type": "Expression"
													},
													"p_table": {
														"value": "@item().TargetTable",
														"type": "Expression"
													}
												}
											}
										]
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "SP_MarkSuccess",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ForEachProcesses",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[SIM_103].[SIM_SP_ETL_AUDIT_UPDATE_BY_PIPELINE]",
					"storedProcedureParameters": {
						"PipelineRunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							}
						},
						"Status": {
							"value": "Succeeded",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "e2eis_APP_PROD",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP_MarkFailure",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ForEachProcesses",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "DELETE_BY_FILERECORDBIRTHDATE",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[SIM_103].[SIM_SP_ETL_AUDIT_UPDATE_BY_PIPELINE]",
					"storedProcedureParameters": {
						"PipelineRunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							}
						},
						"Status": {
							"value": "Failed",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "e2eis_APP_PROD",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "DELETE_BY_FILERECORDBIRTHDATE",
				"description": "This procedure will delete the records based on the input in the FileRecordBirthDate for each table",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "0.1:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[SIM_103].[SIM_SP_ETL_DELETE_BY_FILERECORDBIRTHDATE]",
					"storedProcedureParameters": {
						"FileRecordBirthDate": {
							"value": {
								"value": "@pipeline().parameters.fileRecordBirthDate",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "e2eis_APP_PROD",
					"type": "LinkedServiceReference"
				}
			}
		],
		"concurrency": 5,
		"parameters": {
			"processControls": {
				"type": "array"
			},
			"fileRecordBirthDate": {
				"type": "string"
			}
		},
		"annotations": [],
		"lastPublishTime": "2025-09-08T11:05:57Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}