{
	"name": "dataflow1SIMBOBFB",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SIM_BOOK_OF_BUSSINESS_ALL_CARRIERS_FB_PRD",
						"type": "DatasetReference"
					},
					"name": "source1simfbbob",
					"description": "Import data from SIM_BOOK_OF_BUSSINESS_ALL_CARRIERS_FB_PRD"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SIM_FB_BOB_GENERATE",
						"type": "DatasetReference"
					},
					"name": "sink1simfbbobgeneratefile",
					"description": "GENERATING FILE SIM_BOOK_OF_BUSSINESS_ALL_CARRIERS_FB_MMDDYYYY"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          E2EIS_SEQ_NUMBER as long,",
				"          CARRIER as string,",
				"          AGENCY_NAME as string,",
				"          AGENCY_IDENTIFIER as string,",
				"          AGENT_ID as string,",
				"          AGENT_NPN as string,",
				"          AGENT_FULL_NAME as string,",
				"          PLAN_NAME as string,",
				"          PRODUCT as string,",
				"          CONTRACT_ID as string,",
				"          CONTRACT_MEMBER_COUNT as string,",
				"          MEMBER_RELATIOSHIP as string,",
				"          MEMBER_FIRST_NAME as string,",
				"          MEMBER_LAST_NAME as string,",
				"          MEMBER_DOB as string,",
				"          COUNTY_NAME as string,",
				"          EXCHANGE_INDICATOR as string,",
				"          PRIMARY_MEMBER_ID as string,",
				"          PRODUCT_TYPE as string,",
				"          BEST_AVAILABLE_POSTAL_CODE as string,",
				"          COVERAGE_EFFECTIVE_DATE as string,",
				"          COVERAGE_EXPIRATION_DATE as string,",
				"          AGENT_CONTRACT_START_DATE as string,",
				"          AGENT_CONTRACT_TERM_DATE as string,",
				"          MEMBER_ORIGINAL_EFFECTIVE_DATE as string,",
				"          CONTRACT_STATUS as string,",
				"          CARRIER_CONTRACT_ID as string,",
				"          ACTIVITY_FLAG as string,",
				"          POLICY_RANK as string,",
				"          POLICY_ADDED_DATE as date,",
				"          POLICY_RETENTION_DATE as date,",
				"          POLICY_REMOVED_DATE as date,",
				"          POLICY_CANCELLED_DATE as date,",
				"          POLICY_LAST_RECEIVED_DATE as date,",
				"          PERIOD_NAME as string,",
				"          PERIOD_DESCRIPTION as string,",
				"          PERIOD_START_DATE as date,",
				"          PERIOD_END_DATE as date,",
				"          AGENCY_ID as string,",
				"          RECORD_LOAD_DATE as date,",
				"          RECORD_LOADED_BY as string,",
				"          RECORD_DATA_SOURCE as string,",
				"          RECORD_FLAG_STATUS as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'Select \\nE2EIS_SEQ_NUMBER,CARRIER,AGENCY_NAME,AGENCY_IDENTIFIER,AGENT_ID ASSIGNED_AGENT_NUMBER,AGENT_NPN,AGENT_FULL_NAME ASSIGNED_AGENT_NAME,PLAN_NAME,\\nPRODUCT,CONTRACT_ID Policy_id, CONTRACT_MEMBER_COUNT MEMBER_COUNT, MEMBER_RELATIOSHIP,MEMBER_FIRST_NAME SUBSCRIBER_FIRST_NAME,MEMBER_LAST_NAME SUBSCRIBER_LAST_NAME,\\nMEMBER_DOB SUBSCRIBER_DOB,COUNTY_NAME COUNTY,EXCHANGE_INDICATOR,PRIMARY_MEMBER_ID,PRODUCT_TYPE,BEST_AVAILABLE_POSTAL_CODE ZIP_CODE,\\nCOVERAGE_EFFECTIVE_DATE COVERAGE_START_DATE,COVERAGE_EXPIRATION_DATE COVERAGE_END_DATE, AGENT_CONTRACT_START_DATE BROKER_START_DATE,AGENT_CONTRACT_TERM_DATE BROKER_END_DATE,\\nMEMBER_ORIGINAL_EFFECTIVE_DATE SUBSCRIBER_ORIGINAL_EFFECTIVE_DATE,CONTRACT_STATUS POLICY_STATUS,\\nMEMBER_PHONE_NUMBER MEMBER_PHONE_NUMBER_1, MEMBER_EMAIL_ADDRESS SUBSCRIBER_EMAIL,\\nACTIVITY_FLAG,POLICY_RANK,\\nPOLICY_ADDED_DATE,POLICY_RETENTION_DATE,POLICY_REMOVED_DATE,POLICY_CANCELLED_DATE,\\nPOLICY_LAST_RECEIVED_DATE,PERIOD_NAME,PERIOD_DESCRIPTION,PERIOD_START_DATE,PERIOD_END_DATE,\\nBILL_STATUS,Original_Policy_Status,Policy_Reactivation_date,Adds_member_Count,Cancels_Member_Count,\\nMEMBER_RESPONSIBILITY,ACCOUNTINGDATE,COMPENSATION_TYPE Annual_Compensation_type, SUBSCRIBER_ORIG_EFFDATE_HIS AGENCY_SUBSCRIBER_ORIG_EFFDATE\\nfrom [SIM_103].SIM_BOOK_OF_BUSSINESS_ALL_CARRIERS_FB',",
				"     format: 'query') ~> source1simfbbob",
				"source1simfbbob sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          E2EIS_SEQ_NUMBER as string,",
				"          CARRIER as string,",
				"          AGENCY_NAME as string,",
				"          AGENCY_IDENTIFIER as string,",
				"          AGENT_ID as string,",
				"          AGENT_NPN as string,",
				"          AGENT_FULL_NAME as string,",
				"          PLAN_NAME as string,",
				"          PRODUCT as string,",
				"          CONTRACT_ID as string,",
				"          CONTRACT_MEMBER_COUNT as string,",
				"          MEMBER_RELATIOSHIP as string,",
				"          MEMBER_FIRST_NAME as string,",
				"          MEMBER_LAST_NAME as string,",
				"          MEMBER_DOB as string,",
				"          COUNTY_NAME as string,",
				"          EXCHANGE_INDICATOR as string,",
				"          PRIMARY_MEMBER_ID as string,",
				"          PRODUCT_TYPE as string,",
				"          BEST_AVAILABLE_POSTAL_CODE as string,",
				"          COVERAGE_EFFECTIVE_DATE as string,",
				"          COVERAGE_EXPIRATION_DATE as string,",
				"          AGENT_CONTRACT_START_DATE as string,",
				"          AGENT_CONTRACT_TERM_DATE as string,",
				"          MEMBER_ORIGINAL_EFFECTIVE_DATE as string,",
				"          CONTRACT_STATUS as string,",
				"          CARRIER_CONTRACT_ID as string,",
				"          ACTIVITY_FLAG as string,",
				"          POLICY_RANK as string,",
				"          POLICY_ADDED_DATE as string,",
				"          POLICY_RETENTION_DATE as string,",
				"          POLICY_REMOVED_DATE as string,",
				"          POLICY_CANCELLED_DATE as string,",
				"          POLICY_LAST_RECEIVED_DATE as string,",
				"          PERIOD_NAME as string,",
				"          PERIOD_DESCRIPTION as string,",
				"          PERIOD_START_DATE as string,",
				"          PERIOD_END_DATE as string",
				"     ),",
				"     partitionFileNames:['SIM_BOOK_OF_BUSSINESS_ALL_CARRIERS_FB_MMDDYYYY.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1simfbbobgeneratefile"
			]
		}
	}
}